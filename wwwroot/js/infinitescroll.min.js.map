{"version":3,"names":["$","ew","_interopDefaultLegacy","e","default","$__default","ew__default","_typeof","obj","Symbol","iterator","constructor","prototype","_toPropertyKey","arg","key","input","hint","prim","toPrimitive","undefined","res","call","TypeError","String","Number","_toPrimitive","_defineProperty","value","Object","defineProperty","enumerable","configurable","writable","InfiniteScroll","id","options","_this$options","_this$options2","_this$options3","this","container","document","getElementById","table","getTable","rows","classList","contains","pageCount","rootMargin","threshold","overlayScrollbars","$document","$container","addClass","$grid","closest","$panels","find","innerWidth","$form","$detailPages","$tabPane","$tab","attr","$collapse","isActive","hasClass","isDetail","on","init","bind","_proto","_this$container","querySelector","getWidth","isMobile","getUrl","page","currentPage","TABLE_PAGE_NUMBER","getParams","URLSearchParams","TOKEN_NAME_KEY","TOKEN_NAME","ANTIFORGERY_TOKEN_KEY","ANTIFORGERY_TOKEN","PAGE_LAYOUT","setCurrentPage","history","replaceState","observe","el","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","matches","tbody","nextElementSibling","load","parseInt","dataset","intersectionRatio","root","observeTableBody","count","Math","max","countToLast","i","ROWTYPE_ADD","ROWTYPE_EDIT","$overlay","overlayTemplate","append","fetch","method","body","then","async","$html","response","text","main","replaceSelectors","selector","html","appendSelectors","Event","type","appendChild","initPage","trigger","Array","from","row","rowindex","finally","removeClass","remove","setupTable","clientHeight","offsetHeight","$rows","filter","n","length","slice","loadjs","ready","_OverlayScrollbars","OverlayScrollbars","destroy","overlayScrollbarsOptions","data","ajaxSend","event","jqxhr","settings","isString","startsWith","endsWith","ar","parseJson","isArray","JSON","stringify","map","req","infinitescroll","mergeSearchParams","args","sameText","url","setSearchParams","width","grid","_grid$querySelector","scrollTop","assign","jQuery"],"sources":["js\\infinitescroll.js"],"sourcesContent":["/*!\n * Infinite Scroll for ASP.NET Maker v2023.1.0\n * Copyright (c) e.World Technology Limited. All rights reserved.\n */\n(function ($, ew) {\n  'use strict';\n\n  var _interopDefaultLegacy = e => e && typeof e === 'object' && 'default' in e ? e : { default: e };\n\n  var $__default = /*#__PURE__*/_interopDefaultLegacy($);\n  var ew__default = /*#__PURE__*/_interopDefaultLegacy(ew);\n\n  function _typeof(obj) {\r\n    \"@babel/helpers - typeof\";\r\n\r\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\r\n      return typeof obj;\r\n    } : function (obj) {\r\n      return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n    }, _typeof(obj);\r\n  }\n\n  function _toPrimitive(input, hint) {\r\n    if (_typeof(input) !== \"object\" || input === null) return input;\r\n    var prim = input[Symbol.toPrimitive];\r\n    if (prim !== undefined) {\r\n      var res = prim.call(input, hint || \"default\");\r\n      if (_typeof(res) !== \"object\") return res;\r\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\r\n    }\r\n    return (hint === \"string\" ? String : Number)(input);\r\n  }\n\n  function _toPropertyKey(arg) {\r\n    var key = _toPrimitive(arg, \"string\");\r\n    return _typeof(key) === \"symbol\" ? key : String(key);\r\n  }\n\n  function _defineProperty(obj, key, value) {\r\n    key = _toPropertyKey(key);\r\n    if (key in obj) {\r\n      Object.defineProperty(obj, key, {\r\n        value: value,\r\n        enumerable: true,\r\n        configurable: true,\r\n        writable: true\r\n      });\r\n    } else {\r\n      obj[key] = value;\r\n    }\r\n    return obj;\r\n  }\n\n  let InfiniteScroll = /*#__PURE__*/function () {\r\n    // IntersectionObserver\r\n    // Integer\r\n    // Integer\r\n\r\n    // Load next page when the nth-to-last row of current page is visible. Default is 1 (the last row).\r\n\r\n    // Not compatible with responsive-table\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {string} id Container ID\r\n     * @param {Object} options Options\r\n     * @param {string} options.threshold Specifies a set of offsets to add to the root's bounding box when calculating intersections. Default is \"0px 0px 0px 0px\".\r\n     * @param {number[]} options.rootMargin An array of numbers between 0.0 and 1.0, specifying a ratio of intersection area to total bounding box area for the observed target. Default is [0, 0.25].\r\n     * @param {number} options.pageCount Page count\r\n     */\r\n    function InfiniteScroll(id, options) {\r\n      var _this$options, _this$options$rootMar, _this$options2, _this$options2$thresh, _this$options3, _this$options3$overla;\r\n      this.container = document.getElementById(id), this.table = this.getTable();\r\n      if (!this.table || !this.table.rows || !this.container || !this.container.classList.contains(\"ew-grid-middle-panel\")) return;\r\n      this.options = options || {}, this.pageCount = options.pageCount;\r\n      (_this$options$rootMar = (_this$options = this.options).rootMargin) != null ? _this$options$rootMar : _this$options.rootMargin = InfiniteScroll.rootMargin, (_this$options2$thresh = (_this$options2 = this.options).threshold) != null ? _this$options2$thresh : _this$options2.threshold = InfiniteScroll.threshold, (_this$options3$overla = (_this$options3 = this.options).overlayScrollbars) != null ? _this$options3$overla : _this$options3.overlayScrollbars = InfiniteScroll.overlayScrollbars, this.$document = $__default.default(document), this.$container = $__default.default(this.container).addClass(\"table-responsive\"), this.$grid = this.$container.closest(\".ew-grid\"), this.$panels = this.$grid.find(\".ew-grid-lower-panel, .ew-grid-upper-panel\").innerWidth(\"100%\"), this.$form = this.$grid.closest(\".ew-form:not(.ew-list-form)\"), this.$detailPages = this.$grid.closest(\".ew-detail-pages\").addClass(\"d-block\"),\r\n      // Reset from \"table\" to \"block\"\r\n      this.$tabPane = this.$grid.closest(\".tab-pane\"), this.$tab = this.$detailPages.find(\"a[data-bs-toggle=tab][href='#\" + this.$tabPane.attr(\"id\") + \"']\"), this.$collapse = this.$grid.closest(\".collapse\"), this.isActive = this.$tab.hasClass(\"show\") || this.$collapse.hasClass(\"show\") || !this.$detailPages[0], this.isDetail = !!this.$form[0];\r\n      if (this.isDetail && !this.isActive) {\r\n        // Is detail grid but not active\r\n        this.$tab.on(\"shown.bs.tab\", this.init.bind(this));\r\n        this.$collapse.on(\"shown.bs.collapse\", this.init.bind(this));\r\n      } else {\r\n        this.init();\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Get table\r\n     * @returns {HTMLTableElement} Table\r\n     */\r\n    var _proto = InfiniteScroll.prototype;\r\n    _proto.getTable = function getTable() {\r\n      var _this$container;\r\n      return (_this$container = this.container) == null ? void 0 : _this$container.querySelector(\"table.ew-table.ew-infinite-scroll-table\");\r\n    }\r\n\r\n    /**\r\n     * Get width\r\n     * @returns {string} Width\r\n     */;\r\n    _proto.getWidth = function getWidth() {\r\n      return ew__default.default.isMobile() ? \"100%\" : \"\"; // Use width = 100% for mobile\r\n    }\r\n\r\n    /**\r\n     * Get URL\r\n     * @param {number} page\r\n     * @returns {string} URL\r\n     */;\r\n    _proto.getUrl = function getUrl(page) {\r\n      return ew__default.default.currentPage() + \"?\" + ew__default.default.TABLE_PAGE_NUMBER + \"=\" + page;\r\n    }\r\n\r\n    /**\r\n     * Get request parameters\r\n     * @returns {URLSearchParams}\r\n     */;\r\n    _proto.getParams = function getParams() {\r\n      return new URLSearchParams([[ew__default.default.TOKEN_NAME_KEY, ew__default.default.TOKEN_NAME],\r\n      // Add token name // PHP\r\n      [ew__default.default.ANTIFORGERY_TOKEN_KEY, ew__default.default.ANTIFORGERY_TOKEN],\r\n      // Add antiforgery token // PHP\r\n      [ew__default.default.PAGE_LAYOUT, \"false\"], [\"infinitescroll\", \"1\"]]);\r\n    }\r\n\r\n    /**\r\n     * Set current page\r\n     * @param {number} page Current page number\r\n     */;\r\n    _proto.setCurrentPage = function setCurrentPage(page) {\r\n      this.currentPage = page;\r\n      history.replaceState(null, \"\", this.getUrl(page));\r\n    }\r\n\r\n    /**\r\n     * Observe element\r\n     * @param {HTMLElement} el Element to observe\r\n     */;\r\n    _proto.observe = function observe(el) {\r\n      if (!this.observer) {\r\n        this.observer = new IntersectionObserver(entries => {\r\n          entries.forEach(entry => {\r\n            if (entry.isIntersecting) {\r\n              let el = entry.target;\r\n              if (el.matches(\"tr\")) {\r\n                // Table row\r\n                let tbody = el.closest(\"tbody[data-page]\");\r\n                if (!tbody.nextElementSibling && !tbody.closest(\".ew-grid.ew-loading\"))\r\n                  // No next page and not loading\r\n                  this.load(parseInt(tbody.dataset.page, 10));\r\n              } else if (el.matches(\"tbody[data-page]\") && entry.intersectionRatio > (this.options.threshold[1] || InfiniteScroll.threshold[1])) {\r\n                // Table body\r\n                this.setCurrentPage(parseInt(el.dataset.page, 10));\r\n              }\r\n            }\r\n          });\r\n        }, {\r\n          root: this.container,\r\n          rootMargin: this.options.rootMargin,\r\n          threshold: this.options.threshold\r\n        });\r\n      }\r\n      if (!el) return;\r\n      this.observer.observe(el);\r\n    }\r\n\r\n    /**\r\n     * Observe table body element and the nth-to-last row element\r\n     * @param {HTMLElement} tbody\r\n     */;\r\n    _proto.observeTableBody = function observeTableBody(tbody) {\r\n      this.observe(tbody); // Observe the tbody\r\n      let count = Math.max(InfiniteScroll.countToLast, 1) || 1;\r\n      for (let i = 1; i <= count; i++) this.observe(tbody.querySelector(\":scope > tr:nth-last-child(\" + i + \")\")); // Observe the nth-to-last row\r\n    }\r\n\r\n    /**\r\n     * Load next page\r\n     * @param {number} page Current page index\r\n     */;\r\n    _proto.load = function load(page) {\r\n      if (page >= this.pageCount) return;\r\n      if (this.$grid.find(\"[data-rowtype=\" + ew__default.default.ROWTYPE_ADD + \"], [data-rowtype=\" + ew__default.default.ROWTYPE_EDIT + \"]\")[0])\r\n        // Inline/Grid-Add/Edit\r\n        return;\r\n      let $overlay = $__default.default(ew__default.default.overlayTemplate());\r\n      this.$grid.addClass(\"ew-loading\").append($overlay);\r\n      fetch(this.getUrl(++page), {\r\n        method: \"POST\",\r\n        body: this.getParams()\r\n      }).then(async response => {\r\n        let $html = $__default.default(\"<div>\" + (await response.text()) + \"</div>\"),\r\n          $main = $html.find(\".list\"),\r\n          main = $main[0],\r\n          $tbody = $html.find(\".ew-infinite-scroll-table > tbody[data-page]\"),\r\n          tbody = $tbody[0];\r\n        if (tbody) {\r\n          InfiniteScroll.replaceSelectors.forEach(selector => $__default.default(selector).html($html.find(selector).html())); // Replace contents\r\n          InfiniteScroll.appendSelectors.forEach(selector => $__default.default(selector).append($html.find(selector).html())); // Append contents\r\n          let e = $__default.default.Event({\r\n            type: \"load.ew\",\r\n            target: main\r\n          });\r\n          this.table.appendChild(tbody); // Append tbody\r\n          ew__default.default.initPage(e);\r\n          this.$document.trigger(e);\r\n          Array.from(this.table.rows).forEach((row, i) => row.dataset.rowindex = i); // Update row index\r\n          this.observeTableBody(tbody);\r\n        }\r\n      }).finally(() => this.$grid.removeClass(\"ew-loading\").find($overlay).remove());\r\n    }\r\n\r\n    /**\r\n     * Set up table\r\n     */;\r\n    _proto.setupTable = function setupTable() {\r\n      // Setup the table\r\n      this.table = this.getTable();\r\n      ew__default.default.setupTable(this.table);\r\n\r\n      // Check last row\r\n      if (this.table.rows && this.container.clientHeight > this.table.offsetHeight) {\r\n        let $rows = $__default.default(this.table.rows).filter(\":not(.ew-template)\"),\r\n          n = $rows.filter(\"[data-rowindex=1]\").length || $rows.filter(\"[data-rowindex=0]\").length || 1;\r\n        $rows.slice(-1 * n).find(\"td.ew-table-last-row\").removeClass(\"ew-table-last-row\").addClass(\"ew-table-border-bottom\");\r\n      }\r\n\r\n      // Overlay scrollbars\r\n      if (this.options.overlayScrollbars) loadjs.ready(\"scrollbars\", () => {\r\n        var _OverlayScrollbars;\r\n        (_OverlayScrollbars = OverlayScrollbars(this.container)) == null ? void 0 : _OverlayScrollbars.destroy(); // Destroy old one which might be corrupted by refresh()\r\n        OverlayScrollbars(this.container, ew__default.default.overlayScrollbarsOptions);\r\n      });\r\n\r\n      // Observe the tbody and the nth-to-last row\r\n      let tbody = this.table.querySelector(\"tbody[data-page]\");\r\n      !tbody || this.observeTableBody(tbody);\r\n    }\r\n\r\n    /**\r\n     * Init\r\n     */;\r\n    _proto.init = function init() {\r\n      if (this.$container.data(\"InfiniteScroll\")) return;\r\n\r\n      // Add handlers to send infinitescroll=1 (jQuery)\r\n      $__default.default(document).ajaxSend(function (event, jqxhr, settings) {\r\n        let data = settings.data;\r\n        if ($__default.default.isString(data) && data.startsWith(\"[{\") && data.endsWith(\"}]\")) {\r\n          // Check if jQuery batch request\r\n          let ar = ew__default.default.parseJson(data);\r\n          if (Array.isArray(ar)) settings.data = JSON.stringify(ar.map(req => ({\r\n            ...req,\r\n            infinitescroll: 1\r\n          })));\r\n        } else {\r\n          settings.data = ew__default.default.mergeSearchParams(data, {\r\n            infinitescroll: 1\r\n          });\r\n        }\r\n      });\r\n\r\n      // Add handlers to send infinitescroll=1 (ew.fetch)\r\n      $__default.default(document).on(\"fetch\", function (e, args) {\r\n        var _args$init;\r\n        (_args$init = args.init) != null ? _args$init : args.init = {};\r\n        if (!args.init.method || ew__default.default.sameText(args.init.method, \"GET\")) {\r\n          // GET\r\n          args.url = ew__default.default.setSearchParams(args.url, {\r\n            infinitescroll: 1\r\n          });\r\n        } else {\r\n          // POST\r\n          args.init.body = ew__default.default.mergeSearchParams(args.init.body, {\r\n            infinitescroll: 1\r\n          });\r\n        }\r\n      });\r\n\r\n      // Width\r\n      let width = this.getWidth();\r\n\r\n      // Set form width same as grid\r\n      if (this.isDetail && width) this.$form.addClass(\"w-100\");\r\n\r\n      // Adjust the width of the container\r\n      if (this.isDetail || ew__default.default.isMobile()) this.$grid.addClass(\"d-block\");\r\n\r\n      // Set up table\r\n      this.setupTable();\r\n\r\n      // Listen to refresh event (e.g. after sorting)\r\n      this.$document.on(\"refresh.ew\", e => {\r\n        let grid = e.target;\r\n        if (this.$grid[0] == grid) {\r\n          var _grid$querySelector;\r\n          let content = (_grid$querySelector = grid.querySelector(\".os-viewport\")) != null ? _grid$querySelector : grid.querySelector(\".ew-grid-middle-panel\");\r\n          content.scrollTop = 0;\r\n          this.setupTable();\r\n        }\r\n      });\r\n\r\n      // Save the instance\r\n      this.$container.data(\"InfiniteScroll\", this);\r\n    };\r\n    return InfiniteScroll;\r\n  }(); // Extend\r\n  _defineProperty(InfiniteScroll, \"countToLast\", 1);\r\n  _defineProperty(InfiniteScroll, \"rootMargin\", \"0px\");\r\n  _defineProperty(InfiniteScroll, \"threshold\", [0, 0.25]);\r\n  _defineProperty(InfiniteScroll, \"overlayScrollbars\", false);\r\n  _defineProperty(InfiniteScroll, \"replaceSelectors\", [\".ew-infinite-scroll-grid .ew-grid-upper-panel .ew-pager-end\", \".ew-infinite-scroll-table thead\", \".ew-infinite-scroll-grid .ew-grid-lower-panel .ew-pager-end\"]);\r\n  _defineProperty(InfiniteScroll, \"appendSelectors\", [\".ew-debug .card-body\"]);\r\n  Object.assign(ew__default.default, {\r\n    InfiniteScroll\r\n  });\n\n})(jQuery, ew);\n"],"mappings":"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"}